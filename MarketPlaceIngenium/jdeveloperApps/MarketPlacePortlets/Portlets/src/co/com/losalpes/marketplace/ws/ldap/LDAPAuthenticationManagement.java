package co.com.losalpes.marketplace.ws.ldap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;

import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (11.1.1.0.0, build 110329.0915.20612)

@WebService(wsdlLocation="http://portal.marketplace.losalpes.com.co:8148/LDAPAuthenticationManagementService/LDAPAuthenticationManagement?wsdl",
  targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/", name="LDAPAuthenticationManagement")
@XmlSeeAlso(
  { co.com.losalpes.marketplace.ws.ldap.types.ObjectFactory.class })
public interface LDAPAuthenticationManagement
{
  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/autenticarRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/autenticar/Fault/UsuarioNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/autenticarResponse")
  @ResponseWrapper(localName="autenticarResponse", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.AutenticarResponse")
  @RequestWrapper(localName="autenticar", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.Autenticar")
  @WebResult(targetNamespace="")
  public co.com.losalpes.marketplace.ws.ldap.types.UsuarioBO autenticar(@WebParam(targetNamespace="",
      name="login")
    String login, @WebParam(targetNamespace="", name="password")
    String password)
    throws co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException;

  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/crearUsuarioRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/crearUsuario/Fault/RolNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.RolNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/crearUsuarioResponse")
  @ResponseWrapper(localName="crearUsuarioResponse", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.CrearUsuarioResponse")
  @RequestWrapper(localName="crearUsuario", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.CrearUsuario")
  @WebResult(targetNamespace="")
  public co.com.losalpes.marketplace.ws.ldap.types.UsuarioBO crearUsuario(@WebParam(targetNamespace="",
      name="nit")
    String nit, @WebParam(targetNamespace="", name="rol")
    String rol, @WebParam(targetNamespace="", name="nombre")
    String nombre, @WebParam(targetNamespace="", name="email")
    String email)
    throws co.com.losalpes.marketplace.ws.ldap.RolNoExisteException;

  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/actualizarEstadoUsuarioRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/actualizarEstadoUsuario/Fault/UsuarioNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException.class),
        @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/actualizarEstadoUsuario/Fault/EstadoNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.EstadoNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/actualizarEstadoUsuarioResponse")
  @ResponseWrapper(localName="actualizarEstadoUsuarioResponse",
    targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.ActualizarEstadoUsuarioResponse")
  @RequestWrapper(localName="actualizarEstadoUsuario", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.ActualizarEstadoUsuario")
  @WebResult(targetNamespace="")
  public Boolean actualizarEstadoUsuario(@WebParam(targetNamespace="",
      name="login")
    String login, @WebParam(targetNamespace="", name="estado")
    String estado)
    throws co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException, co.com.losalpes.marketplace.ws.ldap.EstadoNoExisteException;

  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/obtenerNitUsuarioRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/obtenerNitUsuario/Fault/UsuarioNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/obtenerNitUsuarioResponse")
  @ResponseWrapper(localName="obtenerNitUsuarioResponse", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.ObtenerNitUsuarioResponse")
  @RequestWrapper(localName="obtenerNitUsuario", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.ObtenerNitUsuario")
  @WebResult(targetNamespace="")
  public String obtenerNitUsuario(@WebParam(targetNamespace="", name="login")
    String login)
    throws co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException;

  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/cambiarClaveRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/cambiarClave/Fault/UsuarioNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/cambiarClaveResponse")
  @ResponseWrapper(localName="cambiarClaveResponse", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.CambiarClaveResponse")
  @RequestWrapper(localName="cambiarClave", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.CambiarClave")
  @WebResult(targetNamespace="")
  public Boolean cambiarClave(@WebParam(targetNamespace="", name="login")
    String login, @WebParam(targetNamespace="", name="nuevaClave")
    String nuevaClave)
    throws co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException;

  @WebMethod
  @Action(input="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/recuperarClaveRequest", fault =
      { @FaultAction(value="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/recuperarClave/Fault/UsuarioNoExisteException",
          className=co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException.class) },
    output="http://ws.ldap.marketplace.losalpes.com.co/LDAPAuthenticationManagement/recuperarClaveResponse")
  @ResponseWrapper(localName="recuperarClaveResponse", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.RecuperarClaveResponse")
  @RequestWrapper(localName="recuperarClave", targetNamespace="http://ws.ldap.marketplace.losalpes.com.co/",
    className="co.com.losalpes.marketplace.ws.ldap.types.RecuperarClave")
  @WebResult(targetNamespace="")
  public Boolean recuperarClave(@WebParam(targetNamespace="", name="login")
    String login, @WebParam(targetNamespace="", name="email")
    String email)
    throws co.com.losalpes.marketplace.ws.ldap.UsuarioNoExisteException;
}
